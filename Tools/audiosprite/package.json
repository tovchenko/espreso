{
  "name": "audiosprite",
  "description": "Concat small audio files into single file and export in many formats.",
  "keywords": [
    "audio",
    "audio-sprite",
    "jukebox",
    "ffmpeg"
  ],
  "author": {
    "name": "TÃµnis Tiigi",
    "email": "tonistiigi@gmail.com"
  },
  "version": "0.2.1",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/github.com/tonistiigi/audiosprite/raw/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/tonistiigi/audiosprite.git"
  },
  "main": "./audiosprite.js",
  "bin": {
    "audiosprite": "./audiosprite.js"
  },
  "dependencies": {
    "optimist": "~0.3.4",
    "winston": "~0.6.2",
    "underscore": "~1.3.3",
    "async": "~0.1.22"
  },
  "devDependencies": {
    "mocha": "~1.4.2"
  },
  "engines": {
    "node": ">=0.8"
  },
  "optionalDependencies": {},
  "scripts": {
    "test": "mocha"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/tonistiigi/audiosprite.png)](http://travis-ci.org/tonistiigi/audiosprite)\n\n### What?\n\nThis is a `ffmpeg` wrapper that will take in **multiple audio files** and combines them **into a single file**. Silent gaps will be put between the parts so that every new part starts from full second and there is at least 1 second pause between every part. The final file will be exported in `mp3`, `ogg`, `ac3`, `m4a` and `caf`(IMA-ADPCM) to support as many devices as possible. This tool will also generate a `JSON` file that is compatible with [zynga/jukebox](https://github.com/zynga/jukebox) framework.\n\n### Why?\n\niOS, Windows Phone and some Android phones have very limited HTML5 audio support. They only support playing single file at a time and loading in new files requires user interaction and has a big latency. To overcome this there is a technique to combine all audio into single file and only play/loop certain parts of that file. [zynga/jukebox](https://github.com/zynga/jukebox) is a audio framework that uses this technique.  [digitalfruit/limejs](https://github.com/digitalfruit/limejs) is a HTML5 game framework that includes Jukebox and lets you add audio to your games using audio sprites.\n\n###Installation\n\n```\nnpm install -g audiosprite\n```\n\n#### Hints for Windows users\n\n- You need to install [Node.js](https://www.nodejs.org/)\n- Use [Git Bash](http://git-scm.com/download/win) instead of Command Line or Powershell\n- Download [ffmpeg](http://ffmpeg.zeranoe.com/builds/) and include it in your path `export PATH=$PATH:path/to/ffmpeg/bin`\n- IMA-ADPCM(the fastest iPhone format) will only be generated if you are using OSX.\n\n###Usage\n\n```\n> audiosprite --help\ninfo: Usage: audiosprite [options] file1.mp3 file2.mp3 *.wav\ninfo: Options:\n  --output, -o      Name for the output file.                                    [default: \"output\"]\n  --export, -e      Limit exported file types. Comma separated extension list.   [default: \"\"]\n  --log, -l         Log level (debug, info, notice, warning, error).             [default: \"info\"]\n  --autoplay, -a    Autoplay sprite name                                         [default: null]\n  --silence, -s     Add special \"silence\" track with specified duration.         [default: 0]\n  --samplerate, -r  Sample rate.                                                 [default: 44100]\n  --channels, -c    Number of channels (1=mono, 2=stereo).                       [default: 1]\n  --rawparts, -p    Include raw slices(for Web Audio API) in specified formats.  [default: \"\"]\n  --help, -h        Show this help message.\n\n\n> audiosprite --autoplay bg_loop --output mygameaudio bg_loop.wav *.mp3\ninfo: File added OK file=bg_loop.wav\ninfo: 1.25s silence gap added OK\ninfo: File added OK file=click.mp3\ninfo: 1.70s silence gap added OK\ninfo: Exported caf OK file=mygameaudio.caf\ninfo: Exported ac3 OK file=mygameaudio.ac3\ninfo: Exported mp3 OK file=mygameaudio.mp3\ninfo: Exported m4a OK file=mygameaudio.m4a\ninfo: Exported ogg OK file=mygameaudio.ogg\ninfo: Exported json OK file=mygameaudio.json\ninfo: All done\n\n\n> cat mygameaudio.json\n{\n  \"resources\": [\n    \"mygameaudio.caf\",\n    \"mygameaudio.ac3\",\n    \"mygameaudio.mp3\",\n    \"mygameaudio.m4a\",\n    \"mygameaudio.ogg\"\n  ],\n  \"spritemap\": {\n    \"bg_loop\": {\n      \"start\": 0,\n      \"end\": 3.75,\n      \"loop\": true\n    },\n    \"click\": {\n      \"start\": 5,\n      \"end\": 5.3,\n      \"loop\": false\n    }\n  },\n  \"autoplay\": \"bg_loop\"\n}\n```\n\n####Setting autoplay track\n\nYou can use `--autoplay` option to set a track that will start playing automatically. This track is then marked as autoplay and looping in the JSON. This syntax is Jukebox framework specific.\n\n####Custom silent track\n\nOn some cases starting and pausing a file has bigger latency than just setting playhead position. You may get better results if your file is always playing. `--silence <duration>` option will generate extra track named *silence* that you can play instead of pausing the file.\n\n####Usage with [zynga/jukebox](https://github.com/zynga/jukebox) framework.\n\nGenerated JSON file can be passed straight into `jukebox.Player` constructor. Check out Jukebox documentation/demos for more info.\n\n```javascript\nvar settings = {/* JSON generated by audiosprite*/};\n...\n// This part needs to be in user event callback.\nvar myPlayer = new jukebox.Player(settings);\n...\nmyPlayer.play('click');\n```\n\n####Usage with [digitalfruit/limejs](https://github.com/digitalfruit/limejs) framework.\n\nFirst generate LimeJS asset from the JSON file that you can require inside your code.\n\n```\n> bin/lime.py gensoy path/to/mygameaudio.json\n```\n\nThen use `AudioMap` class to play the file.\n\n```javascript\ngoog.require('lime.audio.AudioMap');\ngoog.require('lime.ASSETS.mygameaudio.json');\n\nvar audio = new lime.audio.AudioMap(lime.ASSETS.mygameaudio.json);\n...\naudio.play('click');\n```\n\n*Don't forget to use the `--rawparts=mp3` option to benefit from the LimeJS feature to automatically switch to Web Audio API when it's supported by the client.*\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tonistiigi/audiosprite/issues"
  },
  "homepage": "https://github.com/tonistiigi/audiosprite",
  "_id": "audiosprite@0.2.1",
  "_from": "audiosprite@"
}
