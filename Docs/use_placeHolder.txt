How to use es.PlaceHolder & CocoStudio

The es.PlaceHolder class is using for scene layouting.
It reads files which have been generated by CocoStudio.

1. Install CocoStudio (ver 1.6) and open UI editor
2. Create a pane with useful for you resolution, for instance 1024x768,
	this resolution won't be used in engine because it uses frame size
	for element layouting, this resolution just for you.
3. Manage your elements according to next rules:
	a) You can set up position in two ways:
		using direct coordinates -> just set "X" & "Y" to appropriate columns.
		using a percent at parent size -> set checkbox "Percent" above "X" & "Y" columns
		 and input values to the appeared columns "Scale" below "X" & "Y".
		 
	b) You can manipulate with element's size in next ways:
		leave column "Size->Mode" to "Auto" it means that your don't want to set
		 a size and size will be depended on an object loaded from ObjectBuilder or if
		 this object isn't in the builder the size will be set to (0,0).
		set the column "Size->Mode" to "Custom" it means that your size which you'll
		 input in columns "W" & "H" will set to your object and will overlap it's own size
		 taken from builder.
		also in than mode your can set size using a percent at parent size -> set checkbox
		 "Percent" below "W" & "H" columns and input values to appeared columns "Scale".
		 
	c) Also you able to set up next attributes:
		- Scale
		- Rotation
		- Anchor Point
		- Tag
		- Name (will explane below)
		- Render Layer (it's just Z-Order)
		
	d) Very important to understand attribute "Name". It uses for two purposes:
		- Gives to an object a unique string identifier which you'll use for taking this
		 object from a tree hierarchy.
		- Defines which object will be taken from ObjectBuilder.
		
		For defining "Name" your must follow next rules:
		 - name can be consisted from one or two parts. If it consists from two parts they
		  must be separated by "@" symbol. For instance: "Button@play", it means that
		  first part "Button" will be used for taking object from ObjectBuilder by this
		  name. The other part "play" uses for making this object unique, because ObjectBuilder
		  includes only the template for making objects, like "Button", but your scene can
		  consist from a lot buttons that why your must give them different identifiers.
		  
		- for getting object from tree your must use the full name - "Button@play"
		- if an object which your takes from ObjectBuilder alone on the scene than you
		 can give him a name from one first part like - "Button" and use it as id for
		 scene tree and as id for ObjectBuilder.
		 
4. For accessing to objects you should use es.HolderCache. It caches objects which
	your have accessed before and holds them.
		 
5. Exemples:
	var holder = es.PlaceHolder.create(es.utils.getProps(builder.make('scene')), builder);
    var objects = holder.makeTree();
    this.addChild(objects);

    var cache = new es.HolderCache(objects);
    var container1 = cache.find('Button@1');